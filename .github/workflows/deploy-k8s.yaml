# LXD 인스턴스 내부에 쿠버네티스 구축
name: Deploy Kubernetes on LXD Instances

on:
  # deploy-lxd 워크플로우가 성공 했을 때 실행
  workflow_run:
    workflows: ["Deploy LXD Infrastructure"]
    types:
      - completed
  push:
    branches:
      - dev
    paths:
      - "k8s-infra/**"
      - ".github/workflows/deploy-k8s.yaml"
  workflow_dispatch:

jobs:
  setup-k8s-on-all-runners:
    runs-on:
      [
        self-hosted,
        lxd,
        "${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}",
      ]
    env:
      ENV: ${{ github.ref_name == 'main' && 'main' || 'dev' }}

    strategy:
      fail-fast: false
      matrix:
        instance: [1, 2, 3]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure Terraform Cloud credentials
        run: |
          cat > ~/.terraformrc <<EOF
          credentials "app.terraform.io" {
          token = "${{ secrets.TF_API_TOKEN_BANNOTE_SERVER }}"
          }
          EOF

      - name: Prepare Terraform state directory
        run: |
          mkdir -p /home/bannote/.terraform-state
          chmod 755 /home/bannote/.terraform-state

      - name: Terraform Apply for ${{ matrix.instance }}
        working-directory: ./k8s-infra
        env:
          TF_VAR_runner_name: ${{ runner.name }}
        run: |
          echo "Setting up Kubernetes for bannote-${{ env.ENV }}-${{ matrix.instance }}"
          echo "Runner name: ${{ runner.name }}"

          terraform init
          terraform apply -auto-approve

      - name: Verify Kubernetes cluster
        run: |
          echo "Verifying K8s cluster on bannote-${{ env.ENV }}-${{ matrix.instance }}"
        env:
          KUBECONFIG: /home/bannote/.kube/config
